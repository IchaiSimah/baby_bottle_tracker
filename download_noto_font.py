#!/usr/bin/env python3
"""
Script pour t√©l√©charger la police Noto Sans Hebrew
"""

import os
import requests
import zipfile
from pathlib import Path

def download_noto_hebrew_font():
    """T√©l√©charge et installe la police Noto Sans Hebrew"""
    print("üî§ T√©l√©chargement de la police Noto Sans Hebrew")
    print("=" * 50)
    
    # Cr√©er le dossier fonts s'il n'existe pas
    fonts_dir = Path("assets/fonts")
    fonts_dir.mkdir(parents=True, exist_ok=True)
    
    # V√©rifier si la police existe d√©j√†
    font_path = fonts_dir / "NotoSansHebrew-Regular.ttf"
    if font_path.exists():
        print("‚úÖ Police Noto Sans Hebrew d√©j√† pr√©sente")
        return True
    
    # URL de t√©l√©chargement de Noto Sans Hebrew
    font_url = "https://github.com/googlefonts/noto-fonts/raw/main/hinted/ttf/NotoSansHebrew/NotoSansHebrew-Regular.ttf"
    
    try:
        print("üì• T√©l√©chargement en cours...")
        response = requests.get(font_url, timeout=30)
        response.raise_for_status()
        
        # Sauvegarder le fichier
        with open(font_path, 'wb') as f:
            f.write(response.content)
        
        print(f"‚úÖ Police t√©l√©charg√©e avec succ√®s: {font_path}")
        print(f"üìä Taille: {len(response.content)} bytes")
        
        return True
        
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Erreur lors du t√©l√©chargement: {e}")
        return False
    except Exception as e:
        print(f"‚ùå Erreur inattendue: {e}")
        return False

def verify_font_installation():
    """V√©rifie que la police est correctement install√©e"""
    print("\nüîç V√©rification de l'installation")
    print("=" * 30)
    
    font_path = Path("assets/fonts/NotoSansHebrew-Regular.ttf")
    
    if not font_path.exists():
        print("‚ùå Police non trouv√©e")
        return False
    
    # V√©rifier la taille du fichier
    file_size = font_path.stat().st_size
    if file_size < 100000:  # Moins de 100KB, probablement corrompu
        print(f"‚ùå Fichier trop petit ({file_size} bytes), probablement corrompu")
        return False
    
    print(f"‚úÖ Police trouv√©e: {font_path}")
    print(f"üìä Taille: {file_size} bytes")
    
    # Tester l'import dans matplotlib
    try:
        import matplotlib.font_manager as fm
        font_prop = fm.FontProperties(fname=str(font_path))
        print("‚úÖ Police compatible avec matplotlib")
        return True
    except Exception as e:
        print(f"‚ö†Ô∏è Probl√®me avec matplotlib: {e}")
        return True  # La police existe, c'est d√©j√† bien

def main():
    """Fonction principale"""
    print("üéØ Installation de la police Noto Sans Hebrew")
    print("=" * 60)
    
    # T√©l√©charger la police
    download_success = download_noto_hebrew_font()
    
    if download_success:
        # V√©rifier l'installation
        verify_success = verify_font_installation()
        
        if verify_success:
            print("\nüéâ Installation r√©ussie!")
            print("üìà Les graphiques en h√©breu auront maintenant un meilleur rendu.")
        else:
            print("\n‚ö†Ô∏è Installation partielle - la police existe mais pourrait avoir des probl√®mes.")
    else:
        print("\n‚ùå √âchec de l'installation.")
        print("üí° Le syst√®me utilisera les polices de fallback disponibles.")
    
    print("\nüí° Pour tester: python test_fonts.py")

if __name__ == "__main__":
    main() 